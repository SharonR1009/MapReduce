import java.io.IOException;
import java.util.*;

import org.apache.hadoop.fs.Path;
import org.apache.hadoop.conf.*;
import org.apache.hadoop.io.*;
import org.apache.hadoop.mapred.*;
import org.apache.hadoop.util.*;

public class LikeReview {

    public static class Map extends MapReduceBase implements Mapper<LongWritable, Text, Text, IntWritable> {
        private final static IntWritable one = new IntWritable(1);

        @Override
        public void map(LongWritable _key, Text value,
                        OutputCollector<Text, IntWritable> output, Reporter reporter)
                throws IOException {

            String TempString = value.toString();
            String[] OneReview = TempString.split(",");
            output.collect(new Text(OneReview[0]), one);
        }
    }

    public static class Reduce extends MapReduceBase implements Reducer<Text, IntWritable, Text, IntWritable> {
        @Override
        public void reduce(Text _key,
                           Iterator<IntWritable> values,
                           OutputCollector<Text,IntWritable> output,
                           Reporter reporter)
                throws IOException {
            Text key = _key;
            int numb = 0;
            while (values.hasNext()) {
                // replace ValueType with the real type of your value
                IntWritable value = (IntWritable) values.next();
                numb += value.get();
                // process value
            }
            output.collect(key, new IntWritable(numb));
        }

    }

    public static void main(String[] args) throws Exception {
        JobConf conf = new JobConf(LikeReview.class);
        conf.setJobName("LikeReview");

        conf.setOutputKeyClass(Text.class);
        conf.setOutputValueClass(IntWritable.class);

        conf.setMapperClass(Map.class);
        conf.setCombinerClass(Reduce.class);
        conf.setReducerClass(Reduce.class);

        conf.setInputFormat(TextInputFormat.class);
        conf.setOutputFormat(TextOutputFormat.class);

        FileInputFormat.setInputPaths(conf, new Path(args[0]));
        FileOutputFormat.setOutputPath(conf, new Path(args[1]));

        JobClient.runJob(conf);
    }
}

